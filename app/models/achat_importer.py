import os
import pandas as pd
from app.models.produit import Produit
from app.models.achat import Achat
from app import db

class AchatImporter:
    def __init__(self, dossier_achats="achats/"):
        """
        Initialise le module d'importation des achats et cr√©e un dossier pour les fichiers de commande.
        """
        self.dossier_achats = dossier_achats
        os.makedirs(self.dossier_achats, exist_ok=True)

    def importer_commande(self, fichier_path):
        """
        Importe un fichier de commande (Excel ou CSV) et met √† jour l'inventaire.

        Param√®tres:
            fichier_path (str): Chemin vers le fichier de commande.
        """
        if not os.path.exists(fichier_path):
            print(f"‚ùå Le fichier {fichier_path} n'existe pas.")
            return

        # Charger le fichier en fonction de son extension
        if fichier_path.endswith(".csv"):
            df = pd.read_csv(fichier_path)
        elif fichier_path.endswith(".xlsx"):
            df = pd.read_excel(fichier_path)
        else:
            print("‚ùå Format de fichier non support√©.")
            return

        # Parcours de chaque ligne du DataFrame
        for _, row in df.iterrows():
            po = row.get("po")
            code = row.get("code")
            description = row.get("description", "")
            quantite = row.get("quantite", 0)
            fournisseur = row.get("fournisseur", "")
            prix = row.get("prix", 0.0)

            if not code:
                print("‚ö†Ô∏è Ligne ignor√©e (code produit manquant).")
                continue

            # Mise √† jour ou cr√©ation du produit
            produit_existant = Produit.query.filter_by(code=code).first()
            if produit_existant:
                produit_existant.quantite += quantite
                db.session.commit()
                print(f"üîÑ Produit {code} mis √† jour : nouvelle quantit√© = {produit_existant.quantite}")
            else:
                nouveau_produit = Produit(
                    code=code,
                    description=description,
                    quantite=quantite
                )
                db.session.add(nouveau_produit)
                db.session.commit()
                print(f"‚úÖ Nouveau produit {code} ajout√© avec quantit√© = {quantite}")

            # G√©rer l'achat s'il est sp√©cifi√©
            if po:
                achat_existant = Achat.recuperer_achat(po)
                if not achat_existant:
                    nouvel_achat = Achat(
                        po=po,
                        fournisseur=fournisseur,
                        prix=prix
                    )
                    db.session.add(nouvel_achat)
                    db.session.commit()
                    print(f"‚úÖ Achat {po} ajout√© avec succ√®s.")
                else:
                    print(f"‚ö†Ô∏è Achat {po} existe d√©j√†, aucune action effectu√©e.")

        print("üéØ Mise √† jour de l'inventaire termin√©e !")
